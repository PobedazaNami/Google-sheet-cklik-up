/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø–æ–ª–µ–π –∏–∑ ClickUp.
 */
// function fetchAndLogCustomFields() {
//   var apiKey = '–∞–ø–∏';
//   var listId = '–∞–π–¥–∏';
//   var url = `https://api.clickup.com/api/v2/list/${listId}/field`;
  
//   var options = {
//     'method': 'get',
//     'headers': {
//       'Authorization': apiKey,
//       'Content-Type': 'application/json'
//     }
//   };
  
//   try {
//     var response = UrlFetchApp.fetch(url, options);
//     var data = JSON.parse(response.getContentText());
    
//     if (data.fields && data.fields.length > 0) {
//       data.fields.forEach(field => {
//         logToSheet(`Custom Field - ID: ${field.id}, Name: "${field.name}", Type: ${field.type}`);
//       });
//     } else {
//       logToSheet('–ù–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø–æ–ª–µ–π –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ.');
//     }
//   } catch (error) {
//     logToSheet(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø–æ–ª–µ–π: ${error.message}`);
//   }
// }



function authorizeAccess() {
  var spreadsheet = SpreadsheetApp.openById('1lYYAxNPhofX1bqnpsT9bC0c5EMxwI5Y-prIxXEsfmGo');
  var sheet = spreadsheet.getSheetByName('–õ–æ–≥–∏') || spreadsheet.insertSheet('–õ–æ–≥–∏');
  sheet.appendRow(['Authorization Test', new Date()]);
}

// ===============================
// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
// ===============================

// ID Google –¢–∞–±–ª–∏—Ü—ã
const SPREADSHEET_ID = '–∞–π–¥–∏';

// –ò–º–µ–Ω–∞ –ª–∏—Å—Ç–æ–≤
const LOG_SHEET_NAME = '–õ–æ–≥–∏';
const TOP_UP_REQUESTS_SHEET_NAME = 'Top up requests';

// API-–∫–ª—é—á ClickUp (–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ö—Ä–∞–Ω–∏—Ç—å –≤ —Å–≤–æ–π—Å—Ç–≤–∞—Ö —Å–∫—Ä–∏–ø—Ç–∞)
const CLICKUP_API_KEY = '–∞–ø–∏'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π API-–∫–ª—é—á

// ID —Å–ø–∏—Å–∫–∞ ClickUp
const CLICKUP_LIST_ID = '–∞–π–¥–∏';

// ===============================
// –ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ–ª—è ClickUp (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ ID)
// ===============================
const AGENCY_FIELD_ID = 'a1b202bd-2ce8-4c7b-ad93-d0ee9e6e7208'; // ID –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—è "üõÇ Agency"
const TTFB_FIELD_ID = 'e937431d-a2c2-4071-bf1f-fe325963a330'; // ID –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—è "TT/FB"

// ===============================
// –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
// ===============================

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –ª–æ–≥–æ–≤ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–π –ª–∏—Å—Ç.
 * @param {string} message –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
 */
function logToSheet(message) {
  try {
    var spreadsheet = SpreadsheetApp.openById(SPREADSHEET_ID);
    var logSheet = spreadsheet.getSheetByName(LOG_SHEET_NAME);

    if (!logSheet) {
      logSheet = spreadsheet.insertSheet(LOG_SHEET_NAME);
      // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
      logSheet.appendRow(['–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è', '–°–æ–æ–±—â–µ–Ω–∏–µ']);
    }

    logSheet.appendRow([new Date(), message]);
  } catch (error) {
    // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –ª–æ–≥, –∏—Å–ø–æ–ª—å–∑—É–µ–º Logger –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    Logger.log('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –ª–æ–≥: ' + error.message);
  }
}

// ===============================
// –§—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±—Ö—É–∫–æ–≤
// ===============================

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–∏—Ö POST-–∑–∞–ø—Ä–æ—Å–æ–≤ (–≤–µ–±—Ö—É–∫–æ–≤).
 * @param {Object} e –û–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è.
 * @returns {TextOutput} –û—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON.
 */
function doPost(e) {
  logToSheet('–§—É–Ω–∫—Ü–∏—è doPost –≤—ã–∑–≤–∞–Ω–∞');

  // // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ (–¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)
  // var secretToken = 'YOUR_SECRET_TOKEN'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Å–µ–∫—Ä–µ—Ç–Ω—ã–π —Ç–æ–∫–µ–Ω
  // var receivedToken = e.parameter.token; // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —Ç–æ–∫–µ–Ω –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä

  // if (receivedToken !== secretToken) {
  //   logToSheet('–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –≤–µ–±—Ö—É–∫–∞');
  //   return ContentService
  //     .createTextOutput(JSON.stringify({ status: 'error', message: 'Invalid token' }))
  //     .setMimeType(ContentService.MimeType.JSON);
  // }

  if (!e || !e.postData || !e.postData.contents) {
    logToSheet('–û—à–∏–±–∫–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ');
    return ContentService
      .createTextOutput(JSON.stringify({ status: 'error', message: 'No data received' }))
      .setMimeType(ContentService.MimeType.JSON);
  }

  try {
    var data = JSON.parse(e.postData.contents);
    logToSheet('–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ' + JSON.stringify(data));

    if (data.event === 'taskStatusUpdated' && data.history_items) {
      logToSheet('–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏');
      var statusChange = data.history_items.find(item => item.field === 'status');

      if (
        statusChange &&
        statusChange.after &&
        statusChange.after.status &&
        statusChange.after.status.toLowerCase() === 'new'
      ) {
        logToSheet('–°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞ "new". –ó–∞–ø—É—Å–∫–∞–µ–º getNewClickUpTasks');

        try {
          getNewClickUpTasks();
          logToSheet('–§—É–Ω–∫—Ü–∏—è getNewClickUpTasks –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ.');
        } catch (error) {
          logToSheet('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ getNewClickUpTasks: ' + error.message);
        }
      } else {
        logToSheet('–°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞ "new" –∏–ª–∏ —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.');
      }
    } else {
      logToSheet('–ü–æ–ª—É—á–µ–Ω–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è taskStatusUpdated –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç history_items.');
    }
  } catch (error) {
    logToSheet('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö: ' + error.message);
    return ContentService
      .createTextOutput(JSON.stringify({ status: 'error', message: error.message }))
      .setMimeType(ContentService.MimeType.JSON);
  }

  logToSheet('–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ doPost');
  return ContentService
    .createTextOutput(JSON.stringify({ status: 'success' }))
    .setMimeType(ContentService.MimeType.JSON);
}

// ===============================
// –§—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å ClickUp
// ===============================

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–¥–∞—á —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º NEW –∏–∑ ClickUp.
 */
function getNewClickUpTasks() {
  logToSheet('getNewClickUpTasks –≤—ã–∑–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ');

  var apiKey = CLICKUP_API_KEY; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –¥–ª—è API-–∫–ª—é—á–∞
  var listId = CLICKUP_LIST_ID;
  var url = `https://api.clickup.com/api/v2/list/${listId}/task?statuses[]=NEW`;

  var options = {
    'method': 'get',
    'headers': {
      'Authorization': apiKey
    }
  };

  try {
    var response = UrlFetchApp.fetch(url, options);
    var data = JSON.parse(response.getContentText());

    if (!data.tasks) {
      logToSheet('–ù–µ—Ç –∑–∞–¥–∞—á —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º NEW');
      return;
    }

    var tasks = data.tasks;

    var spreadsheet = SpreadsheetApp.openById(SPREADSHEET_ID);
    var sheet = spreadsheet.getSheetByName(TOP_UP_REQUESTS_SHEET_NAME);

    if (!sheet) {
      sheet = spreadsheet.insertSheet(TOP_UP_REQUESTS_SHEET_NAME);
      // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
      sheet.appendRow(['–î–∞—Ç–∞', 'Buyer Binom Name', 'Agency', 'TT/FB', 'Account ID', '–ù–∞–∑–≤–∞', 'Top up amount', 'Status', '-', 'ID']);
    }

    tasks.forEach(function(task) {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–∞–¥–∞—á–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ –ø–æ ID
      if (!isTaskInSheet(task.id, sheet)) {
        addTaskToSheet(task, sheet);
      } else {
        logToSheet(`–ó–∞–¥–∞—á–∞ —Å ID: ${task.id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ. –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞.`);
      }
    });
  } catch (error) {
    logToSheet(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–¥–∞—á –∏–∑ ClickUp: ${error.message}`);
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∑–∞–¥–∞—á–∞ —Å –∑–∞–¥–∞–Ω–Ω—ã–º ID –≤ –ª–∏—Å—Ç–µ.
 * @param {string} taskId ID –∑–∞–¥–∞—á–∏.
 * @param {Sheet} sheet –õ–∏—Å—Ç Google –¢–∞–±–ª–∏—Ü—ã.
 * @returns {boolean} –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –∑–∞–¥–∞—á–∞ –Ω–∞–π–¥–µ–Ω–∞, –∏–Ω–∞—á–µ false.
 */
function isTaskInSheet(taskId, sheet) {
  var lastRow = sheet.getLastRow();
  if (lastRow < 2) return false; // –ï—Å–ª–∏ –º–µ–Ω—å—à–µ –¥–≤—É—Ö —Å—Ç—Ä–æ–∫ (–∑–∞–≥–æ–ª–æ–≤–∫–∏), –∑–∞–¥–∞—á –µ—â—ë –Ω–µ—Ç.

  var taskIds = sheet.getRange(2, 10, lastRow - 1, 1).getValues().flat(); // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ ID –∑–∞–¥–∞—á –≤ –º–∞—Å—Å–∏–≤–µ
  return taskIds.some(id => id.toString().trim() === taskId.toString().trim());
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –≤ Google –¢–∞–±–ª–∏—Ü—É.
 * @param {Object} task –û–±—ä–µ–∫—Ç –∑–∞–¥–∞—á–∏ –∏–∑ ClickUp.
 * @param {Sheet} sheet –õ–∏—Å—Ç Google –¢–∞–±–ª–∏—Ü—ã.
 */
function addTaskToSheet(task, sheet) {
  var id = task.id;
  var name = task.name;

  if (isTaskInSheet(id, sheet)) {
    logToSheet(`–ó–∞–¥–∞—á–∞ —Å ID: ${id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ.`);
    return;
  }

  var formattedDate = Utilities.formatDate(new Date(), Session.getScriptTimeZone(), 'dd.MM.yyyy'); // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É

  var description = task.text_content || task.description || '-';
  var buyerBinomName = (description.match(/Buyer Binom Name:\s*(.*)/i) || [])[1] || '-';
  var accountId = (description.match(/Account ID:\s*(.*)/i) || [])[1] || '-';
  var topUpAmount = (description.match(/Top up amount:\s*(.*)/i) || [])[1] || '-';

  /**
   * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—è –ø–æ ID
   * @param {Array} fields –ú–∞—Å—Å–∏–≤ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø–æ–ª–µ–π –∑–∞–¥–∞—á–∏.
   * @param {string} fieldId ID –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—è.
   * @returns {string} –ó–Ω–∞—á–µ–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—è –∏–ª–∏ '-' –µ—Å–ª–∏ –ø–æ–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.
   */
  function getCustomFieldValueById(fields, fieldId) {
    var field = fields ? fields.find(f => f.id === fieldId) : null;
    if (!field) {
      logToSheet(`–ö–∞—Å—Ç–æ–º–Ω–æ–µ –ø–æ–ª–µ —Å ID "${fieldId}" –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.`);
      return '-';
    }

    switch (field.type) {
      case 'drop_down':
        if (typeof field.value === 'number') {
          // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ value - —ç—Ç–æ orderindex
          var index = field.value;
          var option = field.type_config.options.find(opt => opt.orderindex === index);
          return option ? option.name : '-';
        } else if (typeof field.value === 'object' && field.value.name) {
          return field.value.name;
        } else {
          return '-';
        }
      case 'text':
        return field.value || '-';
      case 'date':
        return field.value ? Utilities.formatDate(new Date(field.value), Session.getScriptTimeZone(), 'dd.MM.yyyy') : '-';
      case 'number':
        return field.value !== undefined ? field.value : '-';
      // –î–æ–±–∞–≤—å—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ –ø–æ–ª–µ–π –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
      default:
        logToSheet(`–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ç–∏–ø –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—è —Å ID "${fieldId}": ${field.type}`);
        return '-';
    }
  }

  // –õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ –∫–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  logToSheet(`–ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ–ª—è –∑–∞–¥–∞—á–∏ (ID: ${id}): ${JSON.stringify(task.custom_fields)}`);

  var agencyValue = getCustomFieldValueById(task.custom_fields, AGENCY_FIELD_ID);
  var ttFbValue = getCustomFieldValueById(task.custom_fields, TTFB_FIELD_ID);

  // –í—Ä–µ–º–µ–Ω–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  /*
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∑–Ω–∞—á–µ–Ω–∏—è–º –≤—ã–ø–∞–¥–∞—é—â–∏–º —Å–ø–∏—Å–∫–∞–º
  var validAgencyValues = ['SBC', 'PTW', 'WLP', 'GH', 'AUR']; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
  var validTtFbValues = ['TT', 'FB']; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã

  if (!validAgencyValues.includes(agencyValue)) {
    logToSheet(`–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è "Agency": "${agencyValue}". –ó–∞–ø–∏—Å—å –ø—Ä–æ–ø—É—â–µ–Ω–∞.`);
    agencyValue = '-';
  }

  if (!validTtFbValues.includes(ttFbValue)) {
    logToSheet(`–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è "TT/FB": "${ttFbValue}". –ó–∞–ø–∏—Å—å –ø—Ä–æ–ø—É—â–µ–Ω–∞.`);
    ttFbValue = '-';
  }
  */

  logToSheet(`–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –≤ —Ç–∞–±–ª–∏—Ü—É: ${formattedDate}, ${buyerBinomName}, ${agencyValue}, ${ttFbValue}, ${accountId}, ${name}, ${topUpAmount}, ID: ${id}`);

  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –≤ Google Sheets
  sheet.appendRow([formattedDate, buyerBinomName, agencyValue, ttFbValue, accountId, name, topUpAmount, 'NEW', '-', id]);
}

// ===============================
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤
// ===============================

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å—Ç–∞—Ç—É—Å ClickUp.
 * @param {string} sheetStatus –°—Ç–∞—Ç—É—Å –∏–∑ —Ç–∞–±–ª–∏—Ü—ã.
 * @returns {string} –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å—Ç–∞—Ç—É—Å –¥–ª—è ClickUp.
 */
function mapStatus(sheetStatus) {
  var statusMap = {
    'TO DO': 'to do',
    'NEW': 'new',
    'IN PROGRESS': 'in progress',
    'ERROR': 'error',
    'DONE BY GLOBAL': 'done by global'
    // –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ —Å—Ç–∞—Ç—É—Å—ã –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
  };
  
  var normalizedStatus = sheetStatus.toUpperCase().trim();
  var mapped = statusMap[normalizedStatus];
  
  if (!mapped) {
    logToSheet(`–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –°—Ç–∞—Ç—É—Å "${sheetStatus}" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ mapStatus.`);
    throw new Error(`–°—Ç–∞—Ç—É—Å "${sheetStatus}" –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–æ–ø—É—Å—Ç–∏–º—ã–º.`);
  }
  
  return mapped;
}

// ===============================
// –§—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ç–∞–±–ª–∏—Ü–µ
// ===============================

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Google –¢–∞–±–ª–∏—Ü—ã.
 * @param {Object} e –û–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è.
 */
function onEdit(e) {
  try {
    if (!e) {
      logToSheet('–°–æ–±—ã—Ç–∏–µ e –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ');
      return;
    } else {
      logToSheet(`–û–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è e: ${JSON.stringify(e)}`);
    }
    if (!e.range) {
      logToSheet('–°–≤–æ–π—Å—Ç–≤–æ e.range –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ');
      return;
    }

    var sheet = e.range.getSheet();
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–∏–∑–æ—à–ª–∏ –Ω–∞ –ª–∏—Å—Ç–µ 'Top up requests'
    if (sheet.getName() !== TOP_UP_REQUESTS_SHEET_NAME) {
      return;
    }

    var editedColumn = e.range.getColumn();
    var editedRow = e.range.getRow();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ –≤ —Å—Ç–æ–ª–±—Ü–µ H (8-–π —Å—Ç–æ–ª–±–µ—Ü) –∏ –Ω–µ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
    if (editedColumn === 8 && editedRow > 1) {
      // –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –∏–∑ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —è—á–µ–π–∫–∏
      var newStatus = e.range.getValue();
      if (!newStatus) {
        logToSheet(`–ù–µ—Ç –Ω–æ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –≤ —Å—Ç—Ä–æ–∫–µ ${editedRow}`);
        return;
      }

      // –ü–æ–ª—É—á–∞–µ–º ID –∑–∞–¥–∞—á–∏ –∏–∑ —Å—Ç–æ–ª–±—Ü–∞ J (10-–π —Å—Ç–æ–ª–±–µ—Ü) —Ç–æ–π –∂–µ —Å—Ç—Ä–æ–∫–∏
      var taskId = sheet.getRange(editedRow, 10).getValue();
      if (taskId) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ –≤ ClickUp
        updateClickUpTaskStatus(taskId.toString().trim(), newStatus.toString().trim());
      } else {
        // –õ–æ–≥–∏—Ä—É–µ–º, –µ—Å–ª–∏ ID –∑–∞–¥–∞—á–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
        logToSheet(`ID –∑–∞–¥–∞—á–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å—Ç—Ä–æ–∫–µ ${editedRow}`);
      }
    }
  } catch (error) {
    logToSheet(`–û—à–∏–±–∫–∞ –≤ onEdit: ${error.message}`);
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏ –≤ ClickUp —á–µ—Ä–µ–∑ API.
 * @param {string} taskId ID –∑–∞–¥–∞—á–∏.
 * @param {string} newStatus –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å.
 */
function updateClickUpTaskStatus(taskId, newStatus) {
  var apiKey = CLICKUP_API_KEY; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –¥–ª—è API-–∫–ª—é—á–∞
  var url = `https://api.clickup.com/api/v2/task/${taskId}`;

  var mappedStatus = mapStatus(newStatus);

  var payload = {
    "status": mappedStatus
  };

  var options = {
    'method': 'put',
    'headers': {
      'Authorization': apiKey,
      'Content-Type': 'application/json'
    },
    'payload': JSON.stringify(payload),
    'muteHttpExceptions': true
  };

  try {
    var response = UrlFetchApp.fetch(url, options);
    var result = JSON.parse(response.getContentText());

    if (response.getResponseCode() === 200) {
      logToSheet(`–£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ ${taskId} –Ω–∞ "${mappedStatus}".`);
    } else {
      logToSheet(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∑–∞–¥–∞—á—É ${taskId}. –û—Ç–≤–µ—Ç: ${response.getContentText()}`);
    }
  } catch (error) {
    logToSheet(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏ ${taskId}: ${error.message}`);
  }
}



