// ===============================
// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
// ===============================

// ID Google –¢–∞–±–ª–∏—Ü—ã
const SPREADSHEET_ID = '–∞–π–¥–∏ —Ç–∞–±–ª–∏—Ü—ã –≥—É–≥–ª';

// –ò–º–µ–Ω–∞ –ª–∏—Å—Ç–æ–≤
const LOG_SHEET_NAME = '–õ–æ–≥–∏';
const TECH_REQUESTS_SHEET_NAME = 'Tech requests'; // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–º—è –ª–∏—Å—Ç–∞ —Ç–æ—á–Ω–æ —Å–æ–≤–ø–∞–¥–∞–µ—Ç

// API-–∫–ª—é—á ClickUp
const CLICKUP_API_KEY = '–∞–ø–∏ –∫–ª—é—á –∫–ª–∏–∫ –∞–ø';

// ID —Å–ø–∏—Å–∫–∞ ClickUp
const CLICKUP_LIST_ID = '–∞–π–¥–∏ –ª–∏—Å—Ç–∞ –∫–ª–∏–∫ –∞–ø'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π ID –∏–∑ –≤–∞—à–∏—Ö –ª–æ–≥–æ–≤

// ===============================
// –ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ–ª—è ClickUp (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ ID)
// ===============================
const CUSTOM_FIELD_REQUEST_TYPE_ID = '–∞–π–¥–∏ –∫–∞—Å—Ç–æ–º –ø–æ–ª–µ–π —É–∑–Ω–∞–µ–º –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ –∞–ø–∏ –≤ —Ç–∞—Å–∫'; // üìû Request Type

// ===============================
// –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
// ===============================

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –ª–æ–≥–æ–≤ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–π –ª–∏—Å—Ç —Å —É—Ä–æ–≤–Ω—è–º–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
 * @param {string} message –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
 * @param {string} level –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (INFO, DEBUG, ERROR).
 */
function logToSheet(message, level = 'INFO') {
  try {
    var spreadsheet = SpreadsheetApp.openById(SPREADSHEET_ID);
    var logSheet = spreadsheet.getSheetByName(LOG_SHEET_NAME);

    if (!logSheet) {
      logSheet = spreadsheet.insertSheet(LOG_SHEET_NAME);
      // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
      logSheet.appendRow(['–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è', '–£—Ä–æ–≤–µ–Ω—å', '–°–æ–æ–±—â–µ–Ω–∏–µ']);
    }

    logSheet.appendRow([new Date(), level, message]);
  } catch (error) {
    // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –ª–æ–≥, –∏—Å–ø–æ–ª—å–∑—É–µ–º Logger –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    Logger.log('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –ª–æ–≥: ' + error.message);
  }
}

// ===============================
// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
// ===============================

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—è –ø–æ –µ–≥–æ ID.
 * @param {Array} fields –ú–∞—Å—Å–∏–≤ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø–æ–ª–µ–π –∑–∞–¥–∞—á–∏.
 * @param {string} fieldId ID –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—è.
 * @returns {string} –ó–Ω–∞—á–µ–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—è –∏–ª–∏ '-' –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.
 */
function getCustomFieldValue(fields, fieldId) {
  const field = fields.find(f => f.id === fieldId);
  if (field) {
    return getCustomFieldValueById(field);
  }
  logToSheet(`–ö–∞—Å—Ç–æ–º–Ω–æ–µ –ø–æ–ª–µ —Å ID "${fieldId}" –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.`, 'DEBUG');
  return '-';
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—è –æ–±—ä–µ–∫—Ç–∞ –ø–æ–ª—è.
 * @param {Object} field –û–±—ä–µ–∫—Ç –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—è.
 * @returns {string} –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è –∏–ª–∏ '-'.
 */
function getCustomFieldValueById(field) {
  if (field.type === 'drop_down') {
    if (field.value !== undefined && field.value !== null) {
      if (typeof field.value === 'string') {
        // –ó–Ω–∞—á–µ–Ω–∏–µ ‚Äî ID –æ–ø—Ü–∏–∏
        var option = field.type_config.options.find(opt => opt.id === field.value);
        return option ? option.name : '-';
      } else if (typeof field.value === 'number') {
        // –ó–Ω–∞—á–µ–Ω–∏–µ ‚Äî orderindex –æ–ø—Ü–∏–∏
        var option = field.type_config.options.find(opt => opt.orderindex === field.value);
        return option ? option.name : '-';
      } else {
        logToSheet(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è drop_down –ø–æ–ª—è —Å ID "${field.id}": ${field.value}`, 'ERROR');
        return '-';
      }
    } else {
      // –ï—Å–ª–∏ value –ø—É—Å—Ç–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º '-'
      logToSheet(`–ü—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è drop_down –ø–æ–ª—è —Å ID "${field.id}".`, 'DEBUG');
      return '-';
    }
  } else if (field.type === 'text') {
    return field.value || '-';
  } else if (field.type === 'date') {
    return field.value ? Utilities.formatDate(new Date(field.value), Session.getScriptTimeZone(), 'dd.MM.yyyy') : '-';
  } else if (field.type === 'number') {
    return (field.value !== undefined && field.value !== null) ? field.value.toString() : '-';
  }
  // –î–æ–±–∞–≤—å—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ –ø–æ–ª–µ–π –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
  logToSheet(`–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ç–∏–ø –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—è —Å ID "${field.id}": ${field.type}`, 'DEBUG');
  return '-';
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª—è –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è.
 * @param {string} text –¢–µ–∫—Å—Ç –æ–ø–∏—Å–∞–Ω–∏—è.
 * @param {string} fieldName –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è.
 * @returns {string} –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è –∏–ª–∏ '-'.
 */
function extractField(text, fieldName) {
  var regex = new RegExp(fieldName + ':\\s*(.*)', 'i');
  var match = text.match(regex);
  if (match && match[1].trim() !== '') {
    return match[1].trim();
  } else {
    return '-';
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö Task ID –∏–∑ –ª–∏—Å—Ç–∞.
 * @param {Sheet} sheet –õ–∏—Å—Ç Google –¢–∞–±–ª–∏—Ü—ã.
 * @returns {Set} –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –≤—Å–µ—Ö Task ID.
 */
function getAllTaskIds(sheet) {
  var lastRow = sheet.getLastRow();
  if (lastRow < 2) return new Set();

  // –°—Ç–æ–ª–±–µ—Ü T (20) —Å–æ–¥–µ—Ä–∂–∏—Ç Task ID
  var taskIds = sheet.getRange(2, 20, lastRow - 1, 1).getValues().flat();

  // –ü—Ä–∏–≤–æ–¥–∏–º –≤—Å–µ ID –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –∏ —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã
  var normalizedIds = taskIds
    .map(id => id.toString().trim().toLowerCase())
    .filter(id => id);

  return new Set(normalizedIds);
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –ø–µ—Ä–≤–æ–π –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç–æ–ª–±—Ü–∞ E.
 * @param {Sheet} sheet –õ–∏—Å—Ç Google –¢–∞–±–ª–∏—Ü—ã.
 * @returns {number} –ù–æ–º–µ—Ä –ø–µ—Ä–≤–æ–π –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–∏.
 */
function getFirstEmptyRow(sheet) {
  var lastRow = sheet.getLastRow();
  var range = sheet.getRange('E2:E' + lastRow).getValues(); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç–æ–ª–±–µ—Ü E
  for (var row = 0; row < range.length; row++) {
    var isRowEmpty = range[row].every(cell => cell === '' || cell === null);
    if (isRowEmpty) {
      return row + 2; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ (—Å —É—á–µ—Ç–æ–º –∑–∞–≥–æ–ª–æ–≤–∫–∞)
    }
  }
  return sheet.getLastRow() + 1; // –ï—Å–ª–∏ –Ω–µ—Ç –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫, –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∑–∞–¥–∞—á–∞ —Å –∑–∞–¥–∞–Ω–Ω—ã–º ID –≤ –ª–∏—Å—Ç–µ.
 * @param {string} taskId ID –∑–∞–¥–∞—á–∏.
 * @param {Set} taskIdSet –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –≤—Å–µ—Ö Task ID.
 * @returns {boolean} –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –∑–∞–¥–∞—á–∞ –Ω–∞–π–¥–µ–Ω–∞, –∏–Ω–∞—á–µ false.
 */
function isTaskInSheet(taskId, taskIdSet) {
  return taskIdSet.has(taskId.toLowerCase());
}

// ===============================
// –§—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±—Ö—É–∫–æ–≤
// ===============================

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–∏—Ö POST-–∑–∞–ø—Ä–æ—Å–æ–≤ (–≤–µ–±—Ö—É–∫–æ–≤).
 * @param {Object} e –û–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è.
 * @returns {TextOutput} –û—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON.
 */
function doPost(e) {
  logToSheet('–§—É–Ω–∫—Ü–∏—è doPost –≤—ã–∑–≤–∞–Ω–∞', 'DEBUG');

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
  if (!e || !e.postData || !e.postData.contents) {
    logToSheet('–û—à–∏–±–∫–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ', 'ERROR');
    return ContentService
      .createTextOutput(JSON.stringify({ status: 'error', message: 'No data received' }))
      .setMimeType(ContentService.MimeType.JSON);
  }

  try {
    var data = JSON.parse(e.postData.contents);
    logToSheet('–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ' + JSON.stringify(data), 'DEBUG');

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π
    if (data.event === 'taskUpdated') { // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–º–µ–Ω–Ω–æ 'taskUpdated'
      if (data.history_items && data.history_items.length > 0) {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏
        var statusChanged = data.history_items.some(item => item.field === 'status');
        if (statusChanged) {
          logToSheet('–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏', 'INFO');
          var taskId = data.task_id;

          // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–æ–ª—å–∫–æ –Ω–∞–ª–∏—á–∏—è task_id
          if (taskId) {
            processTaskUpdated(taskId);
          } else {
            logToSheet('–û—à–∏–±–∫–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç task_id –≤ –¥–∞–Ω–Ω—ã—Ö –≤–µ–±—Ö—É–∫–∞', 'ERROR');
          }
        } else {
          logToSheet('–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –Ω–µ —Å–≤—è–∑–∞–Ω–æ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º', 'DEBUG');
        }
      } else {
        logToSheet('–ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—É—Å—Ç–∞', 'DEBUG');
      }
    } else {
      logToSheet('–ü–æ–ª—É—á–µ–Ω–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è taskUpdated', 'DEBUG');
    }
  } catch (error) {
    logToSheet('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö: ' + error.message, 'ERROR');
    return ContentService
      .createTextOutput(JSON.stringify({ status: 'error', message: error.message }))
      .setMimeType(ContentService.MimeType.JSON);
  }

  logToSheet('–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ doPost', 'DEBUG');
  return ContentService
    .createTextOutput(JSON.stringify({ status: 'success' }))
    .setMimeType(ContentService.MimeType.JSON);
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏.
 * @param {string} taskId ID –∑–∞–¥–∞—á–∏.
 */
function processTaskUpdated(taskId) {
  // –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
  var lock = LockService.getScriptLock();
  try {
    // –ü–æ–ø—ã—Ç–∫–∞ –∑–∞—Ö–≤–∞—Ç–∏—Ç—å –ª–æ–∫, –∂–¥–µ–º –¥–æ 10 —Å–µ–∫—É–Ω–¥
    lock.waitLock(10000);
  } catch (e) {
    logToSheet('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ö–≤–∞—Ç–∏—Ç—å –ª–æ–∫: ' + e.message, 'ERROR');
    return;
  }

  try {
    logToSheet(`–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–¥–∞—á–∏ —Å ID: ${taskId}`, 'INFO');

    var spreadsheet = SpreadsheetApp.openById(SPREADSHEET_ID);
    var sheet = spreadsheet.getSheetByName(TECH_REQUESTS_SHEET_NAME);

    if (!sheet) {
      logToSheet(`–õ–∏—Å—Ç "${TECH_REQUESTS_SHEET_NAME}" –Ω–µ –Ω–∞–π–¥–µ–Ω.`, 'ERROR');
      return;
    }

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ Task ID –æ–¥–∏–Ω —Ä–∞–∑
    var taskIds = getAllTaskIds(sheet);
    logToSheet(`–¢–µ–∫—É—â–∏–µ Task ID –≤ —Ç–∞–±–ª–∏—Ü–µ: ${Array.from(taskIds).join(', ')}`, 'DEBUG');

    // –ü—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ –∑–∞–¥–∞—á–∞ —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
    if (isTaskInSheet(taskId, taskIds)) {
      logToSheet(`–ó–∞–¥–∞—á–∞ —Å ID: ${taskId} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ. –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞.`, 'INFO');
      return;
    }

    // –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∑–∞–¥–∞—á–∏ –∏–∑ ClickUp
    var task = getTaskDetails(taskId);
    if (!task) {
      logToSheet(`–ó–∞–¥–∞—á–∞ —Å ID: ${taskId} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.`, 'ERROR');
      return;
    }

    var status = getTaskStatus(task);
    logToSheet(`–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏: ${status}`, 'INFO');

    // –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞: —Ç–æ–ª—å–∫–æ "Open"
    var normalizedStatus = status.toLowerCase();
    if (normalizedStatus === 'open') {
      logToSheet(`–°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ ${taskId} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ "Open". –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤ —Ç–∞–±–ª–∏—Ü–µ.`, 'INFO');

      // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Task ID –≤ —Ç–∞–±–ª–∏—Ü–µ
      if (isTaskInSheet(taskId, taskIds)) {
        logToSheet(`–ó–∞–¥–∞—á–∞ —Å ID: ${taskId} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ. –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞.`, 'INFO');
        return;
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –≤ —Ç–∞–±–ª–∏—Ü—É
      addTaskToSheet(task, sheet);
      logToSheet(`–ó–∞–¥–∞—á–∞ ${taskId} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É.`, 'INFO');
    } else {
      logToSheet(`–°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ ${taskId} –Ω–µ "Open". –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞.`, 'INFO');
    }
  } catch (error) {
    logToSheet(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–¥–∞—á–∏ ${taskId}: ${error.message}`, 'ERROR');
  } finally {
    // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ª–æ–∫
    lock.releaseLock();
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–¥–∞—á–∏ –∏–∑ ClickUp.
 * @param {string} taskId ID –∑–∞–¥–∞—á–∏.
 * @returns {Object} –û–±—ä–µ–∫—Ç –∑–∞–¥–∞—á–∏ –∏–ª–∏ null, –µ—Å–ª–∏ –∑–∞–¥–∞—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.
 */
function getTaskDetails(taskId) {
  if (!CLICKUP_API_KEY) {
    logToSheet('–û—à–∏–±–∫–∞: CLICKUP_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.', 'ERROR');
    return null;
  }

  var url = `https://api.clickup.com/api/v2/task/${taskId}`;

  var options = {
    'method': 'get',
    'headers': {
      'Authorization': CLICKUP_API_KEY,
      'Content-Type': 'application/json'
    },
    'muteHttpExceptions': true
  };

  try {
    var response = UrlFetchApp.fetch(url, options);
    var responseCode = response.getResponseCode();
    var responseBody = response.getContentText();

    logToSheet(`–û—Ç–≤–µ—Ç API –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–µ—Ç–∞–ª–µ–π –∑–∞–¥–∞—á–∏ ${taskId}: –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞ ${responseCode}, –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: ${responseBody}`, 'DEBUG');

    if (responseCode === 200) {
      var data = JSON.parse(responseBody);
      return data;
    } else {
      logToSheet(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏ ${taskId}. –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: ${responseCode}. –û—Ç–≤–µ—Ç: ${responseBody}`, 'ERROR');
      return null;
    }
  } catch (error) {
    logToSheet(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–µ—Ç–∞–ª–µ–π –∑–∞–¥–∞—á–∏ ${taskId}: ${error.message}`, 'ERROR');
    return null;
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏.
 * @param {Object} task –û–±—ä–µ–∫—Ç –∑–∞–¥–∞—á–∏.
 * @returns {string} –°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏.
 */
function getTaskStatus(task) {
  return task.status ? task.status.status : '-';
}

// ===============================
// –§—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å ClickUp
// ===============================

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–¥–∞—á —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º OPEN –∏–∑ ClickUp –∏ –∑–∞–ø–∏—Å–∏ –∏—Ö –≤ Google –¢–∞–±–ª–∏—Ü—É.
 */
function getOpenClickUpTasks() {
  logToSheet('getOpenClickUpTasks –≤—ã–∑–≤–∞–Ω–∞', 'INFO');

  if (!CLICKUP_API_KEY) {
    logToSheet('–û—à–∏–±–∫–∞: CLICKUP_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.', 'ERROR');
    return;
  }

  var apiKey = CLICKUP_API_KEY;
  var listId = CLICKUP_LIST_ID;
  var url = `https://api.clickup.com/api/v2/list/${listId}/task?statuses[]=Open`;

  var options = {
    'method': 'get',
    'headers': {
      'Authorization': apiKey
    },
    'muteHttpExceptions': true
  };

  try {
    var response = UrlFetchApp.fetch(url, options);
    var responseCode = response.getResponseCode();
    var responseBody = response.getContentText();

    logToSheet(`–û—Ç–≤–µ—Ç API –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–¥–∞—á —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "Open": –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞ ${responseCode}, –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: ${responseBody}`, 'DEBUG');

    if (responseCode === 200) {
      var data = JSON.parse(responseBody);

      if (!data.tasks || data.tasks.length === 0) {
        logToSheet('–ù–µ—Ç –∑–∞–¥–∞—á —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "Open".', 'INFO');
        return;
      }

      var tasks = data.tasks;
      logToSheet(`–ù–∞–π–¥–µ–Ω–æ ${tasks.length} –∑–∞–¥–∞—á —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "Open".`, 'INFO');

      var spreadsheet = SpreadsheetApp.openById(SPREADSHEET_ID);
      var sheet = spreadsheet.getSheetByName(TECH_REQUESTS_SHEET_NAME);

      if (!sheet) {
        sheet = spreadsheet.insertSheet(TECH_REQUESTS_SHEET_NAME);
        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏, –Ω–∞—á–∏–Ω–∞—è —Å —Å—Ç–æ–ª–±—Ü–∞ E
        sheet.appendRow([
          '', '', '', // –°—Ç–æ–ª–±—Ü—ã A-C: –æ—Å—Ç–∞–≤–ª–µ–Ω—ã –ø—É—Å—Ç—ã–º–∏
          '',         // D: –æ—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–º –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞
          'Request Type',           // E: 5
          'Status',                 // F: 6
          'Request Date',           // G: 7
          'Telegram Tag',           // H: 8
          'Buyer Real Name',        // I: 9
          'Binom user name',        // J: 10
          'TT account id',          // K: 11
          'Binom campaign id',      // L: 12
          'Time range',             // M: 13
          'FB account id',          // N: 14
          'Social account was used by different buyer?', // O: 15
          'Binom user name of buyer who used social account before', // P: 16
          'Response',               // Q: 17
          'Comment',                // R: 18
          '',                       // S: 19 (–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö)
          'Task ID'                 // T: 20
          // –î–æ–±–∞–≤—å—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
        ]);

        // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç–æ–ª–±—Ü–∞ "Status" (F)
        var statusColumn = sheet.getRange('F2:F'); // –°—Ç–æ–ª–±–µ—Ü F –Ω–∞—á–∏–Ω–∞—è —Å–æ —Å—Ç—Ä–æ–∫–∏ 2
        var rule = SpreadsheetApp.newDataValidation()
          .requireValueInList(['Open', 'Done', 'In progress'], true)
          .setAllowInvalid(false)
          .setHelpText('–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏')
          .build();
        statusColumn.setDataValidation(rule);

        // **–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞—â–∏—Ç—ã —Å—Ç–æ–ª–±—Ü–∞ K**
        // –ï—Å–ª–∏ —Ä–∞–Ω–µ–µ –±—ã–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∑–∞—â–∏—Ç–∞ —Å—Ç–æ–ª–±—Ü–∞ K —á–µ—Ä–µ–∑ —Å–∫—Ä–∏–ø—Ç, –µ—ë –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∏–ª–∏ –Ω–µ –¥–æ–±–∞–≤–ª—è—Ç—å
        // –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ, –∑–∞—â–∏—Ç–∞ –Ω–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è, —á—Ç–æ–±—ã –ø–æ–∑–≤–æ–ª–∏—Ç—å —Ä—É—á–Ω–æ–µ –∏ —Å–∫—Ä–∏–ø—Ç–æ–≤–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
      } else {
        // –ï—Å–ª–∏ –ª–∏—Å—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–∏–∫–∞–∫–∏—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è
      }

      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ Task ID –æ–¥–∏–Ω —Ä–∞–∑
      var taskIds = getAllTaskIds(sheet);

      tasks.forEach(function(task) {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–∞–¥–∞—á–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ –ø–æ ID
        if (!isTaskInSheet(task.id, taskIds)) {
          addTaskToSheet(task, sheet);
          taskIds.add(task.id.toLowerCase()); // –î–æ–±–∞–≤–ª—è–µ–º ID –≤ –Ω–∞–±–æ—Ä, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–æ–≤ –≤ —Ä–∞–º–∫–∞—Ö —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
        } else {
          logToSheet(`–ó–∞–¥–∞—á–∞ —Å ID: ${task.id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ. –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞.`, 'INFO');
        }
      });
    } else {
      logToSheet(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–¥–∞—á —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "Open". –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: ${responseCode}. –û—Ç–≤–µ—Ç: ${responseBody}`, 'ERROR');
    }
  } catch (error) {
    logToSheet(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–¥–∞—á –∏–∑ ClickUp: ${error.message}`, 'ERROR');
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –≤ Google –¢–∞–±–ª–∏—Ü—É.
 * @param {Object} task –û–±—ä–µ–∫—Ç –∑–∞–¥–∞—á–∏ –∏–∑ ClickUp.
 * @param {Sheet} sheet –õ–∏—Å—Ç Google –¢–∞–±–ª–∏—Ü—ã.
 */
function addTaskToSheet(task, sheet) {
  var id = task.id.toLowerCase(); // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º Task ID

  var description = task.text_content || task.description || '';

  // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è
  var requestDate = extractField(description, 'Request Date');
  var telegramTag = extractField(description, 'Telegram Tag');
  var buyerRealName = extractField(description, 'Buyer Real Name');
  var binomUserName = extractField(description, 'Binom user name');
  var binomCampaignId = extractField(description, 'Binom campaign id'); // –î–æ–±–∞–≤–ª–µ–Ω–æ
  var ttAccountId = extractField(description, 'TT account id');
  var fbAccountId = extractField(description, 'FB account id'); // –ò–∑–º–µ–Ω–µ–Ω–æ
  var timeRange = extractField(description, 'Time range');
  var socialAccountFlag = extractField(description, 'Social account was used by different buyer?');
  var response = extractField(description, 'Response');
  var comment = extractField(description, 'Comment'); // –ò–∑–º–µ–Ω–µ–Ω–æ

  // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—è
  var requestType = getCustomFieldValue(task.custom_fields, CUSTOM_FIELD_REQUEST_TYPE_ID);

  logToSheet(`–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏: ID=${id}, Request Type=${requestType}, Status=Open`, 'INFO');

  // –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤—É—é –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –≤ —Å—Ç–æ–ª–±—Ü–µ E
  var targetRow = getFirstEmptyRow(sheet);

  // –°–æ–∑–¥–∞—ë–º –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏, –∏—Å–∫–ª—é—á–∞—è —Å—Ç–æ–ª–±–µ—Ü K
  var dataEtoJ = [
    requestType || '-',       // E: Request Type (5)
    'Open',                   // F: Status (6)
    requestDate || '-',       // G: Request Date (7)
    telegramTag || '-',       // H: Telegram Tag (8)
    buyerRealName || '-',     // I: Buyer Real Name (9)
    binomUserName || '-'      // J: Binom user name (10)
  ];

  var dataLtoT = [
    binomCampaignId || '-',   // L: Binom campaign id (12)
    timeRange || '-',         // M: Time range (13)
    fbAccountId || '-',       // N: FB account id (14)
    socialAccountFlag || '-', // O: Social account was used by different buyer? (15)
    '',                       // P: Binom user name of buyer who used social account before (16) ‚Äî –æ—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–º
    response || '-',          // Q: Response (17)
    comment || '-',           // R: Comment (18)
    '',                       // S: [empty] (19)
    id                        // T: Task ID (20)
  ];

  // –í—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å—Ç–æ–ª–±—Ü—ã E‚ÄìJ
  sheet.getRange(targetRow, 5, 1, dataEtoJ.length).setValues([dataEtoJ]);

  // –í—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å—Ç–æ–ª–±—Ü—ã L‚ÄìT
  sheet.getRange(targetRow, 12, 1, dataLtoT.length).setValues([dataLtoT]);

  // –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥ –æ –∑–∞–ø–∏—Å–∏ Task ID
  logToSheet(`Task ID ${id} –∑–∞–ø–∏—Å–∞–Ω –≤ —Å—Ç–æ–ª–±–µ—Ü T, —Å—Ç—Ä–æ–∫–∞ ${targetRow}.`, 'DEBUG');

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è —Å—Ç–æ–ª–±—Ü–∞ "Status" (F)
  var statusCell = sheet.getRange(targetRow, 6); // F
  var rule = SpreadsheetApp.newDataValidation()
    .requireValueInList(['Open', 'Done', 'In progress'], true)
    .setAllowInvalid(false)
    .setHelpText('–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏')
    .build();
  statusCell.setDataValidation(rule);

  // **–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ —Å—Ç–æ–ª–±–µ—Ü K**
  // –¢–µ–ø–µ—Ä—å —Å–∫—Ä–∏–ø—Ç **–Ω–µ** –±—É–¥–µ—Ç –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –Ω–∏—á–µ–≥–æ –≤ —Å—Ç–æ–ª–±–µ—Ü K

  logToSheet(`–ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å—Ç—Ä–æ–∫—É ${targetRow}.`, 'INFO');
}

// ===============================
// –§—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ç–∞–±–ª–∏—Ü–µ
// ===============================

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Google –¢–∞–±–ª–∏—Ü—ã.
 * @param {Object} e –û–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è.
 */
function onEdit(e) {
  try {
    if (!e) {
      logToSheet('–°–æ–±—ã—Ç–∏–µ e –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ', 'ERROR');
      return;
    } else {
      logToSheet(`–û–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è e: ${JSON.stringify(e)}`, 'DEBUG');
    }
    if (!e.range) {
      logToSheet('–°–≤–æ–π—Å—Ç–≤–æ e.range –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ', 'ERROR');
      return;
    }

    var sheet = e.range.getSheet();
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–∏–∑–æ—à–ª–∏ –Ω–∞ –ª–∏—Å—Ç–µ 'Tech requests'
    if (sheet.getName() !== TECH_REQUESTS_SHEET_NAME) {
      return;
    }

    var editedColumn = e.range.getColumn();
    var editedRow = e.range.getRow();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ –≤ —Å—Ç–æ–ª–±—Ü–µ "Status" (F - 6)
    if (editedColumn === 6 && editedRow > 1) { // –°—Ç–æ–ª–±–µ—Ü F: Status
      // –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –∏–∑ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —è—á–µ–π–∫–∏
      var newStatus = e.range.getValue();
      if (!newStatus) {
        logToSheet(`–ù–µ—Ç –Ω–æ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –≤ —Å—Ç—Ä–æ–∫–µ ${editedRow}`, 'DEBUG');
        return;
      }

      // –ü–æ–ª—É—á–∞–µ–º ID –∑–∞–¥–∞—á–∏ –∏–∑ —Å—Ç–æ–ª–±—Ü–∞ T (20-–π —Å—Ç–æ–ª–±–µ—Ü) —Ç–æ–π –∂–µ —Å—Ç—Ä–æ–∫–∏
      var taskId = sheet.getRange(editedRow, 20).getValue(); // –°—Ç–æ–ª–±–µ—Ü T: Task ID
      if (taskId) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ –≤ ClickUp
        updateClickUpTaskStatus(taskId.toString().trim(), newStatus.toString().trim());
      } else {
        // –õ–æ–≥–∏—Ä—É–µ–º, –µ—Å–ª–∏ ID –∑–∞–¥–∞—á–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
        logToSheet(`ID –∑–∞–¥–∞—á–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å—Ç—Ä–æ–∫–µ ${editedRow}`, 'ERROR');
      }
    }

    // **–£–¥–∞–ª–µ–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–æ–ª–±—Ü–∞ K**
    // –≠—Ç–æ—Ç –±–ª–æ–∫ —É–¥–∞–ª—ë–Ω, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–ø—ã—Ç–æ–∫ —Å–∫—Ä–∏–ø—Ç–∞ –æ—á–∏—â–∞—Ç—å —Å—Ç–æ–ª–±–µ—Ü K

  } catch (error) {
    logToSheet(`–û—à–∏–±–∫–∞ –≤ onEdit: ${error.message}`, 'ERROR');
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏ –≤ ClickUp —á–µ—Ä–µ–∑ API.
 * @param {string} taskId ID –∑–∞–¥–∞—á–∏.
 * @param {string} newStatus –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å.
 */
function updateClickUpTaskStatus(taskId, newStatus) {
  if (!CLICKUP_API_KEY) {
    logToSheet('–û—à–∏–±–∫–∞: CLICKUP_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.', 'ERROR');
    return;
  }

  var apiKey = CLICKUP_API_KEY;
  var url = `https://api.clickup.com/api/v2/task/${taskId}`;

  var mappedStatus;
  try {
    mappedStatus = mapStatus(newStatus);
  } catch (error) {
    logToSheet(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞: ${error.message}`, 'ERROR');
    return;
  }

  var payload = {
    "status": mappedStatus
  };

  var options = {
    'method': 'put',
    'headers': {
      'Authorization': apiKey,
      'Content-Type': 'application/json'
    },
    'payload': JSON.stringify(payload),
    'muteHttpExceptions': true
  };

  try {
    var response = UrlFetchApp.fetch(url, options);
    var responseCode = response.getResponseCode();
    var responseBody = response.getContentText();

    logToSheet(`–û—Ç–≤–µ—Ç API –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏ ${taskId}: –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞ ${responseCode}, –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: ${responseBody}`, 'DEBUG');

    if (responseCode === 200) {
      logToSheet(`–£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ ${taskId} –Ω–∞ "${mappedStatus}".`, 'INFO');
    } else {
      logToSheet(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∑–∞–¥–∞—á—É ${taskId}. –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: ${responseCode}. –û—Ç–≤–µ—Ç: ${responseBody}`, 'ERROR');
    }
  } catch (error) {
    logToSheet(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏ ${taskId}: ${error.message}`, 'ERROR');
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å—Ç–∞—Ç—É—Å ClickUp.
 * @param {string} sheetStatus –°—Ç–∞—Ç—É—Å –∏–∑ —Ç–∞–±–ª–∏—Ü—ã.
 * @returns {string} –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å—Ç–∞—Ç—É—Å –¥–ª—è ClickUp.
 */
function mapStatus(sheetStatus) {
  var statusMap = {
    'OPEN': 'Open',
    'DONE': 'Done',
    'IN PROGRESS': 'In progress'
    // –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ —Å—Ç–∞—Ç—É—Å—ã –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
  };
  
  var normalizedStatus = sheetStatus.toUpperCase().trim();
  var mapped = statusMap[normalizedStatus];
  
  if (!mapped) {
    logToSheet(`–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –°—Ç–∞—Ç—É—Å "${sheetStatus}" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ mapStatus.`, 'ERROR');
    throw new Error(`–°—Ç–∞—Ç—É—Å "${sheetStatus}" –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–æ–ø—É—Å—Ç–∏–º—ã–º.`);
  }
  
  return mapped;
}
